// g++ hello.cpp -o hello & hello
#include<bits/stdc++.h>
#include<iostream>
using namespace std;
#define MP make_pair
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
void test();
int x;
map<int,vector<int> >mp;
ll dfs(int n);

void dfs_helper(int src,map<int,bool> &vis);
int main()
{
//freopen("input.in","r",stdin);freopen("output.in","w",stdout);
int t=1;
//   cin>>t;
for(int i=1;i<=t;i++)
{    
//    cout<<"Case #"<<i<<": ";
    test();
cout<<endl;
}
return 0;
}
void test() 
{int n;
cin>>n;
int x;
cin>>x;
for(int i=0;i<x;i++)
{int u,v;
cin>>u>>v;
mp[u].push_back(v);
mp[v].push_back(u);
}
cout<<dfs(n);

}

void dfs_helper(int src,map<int,bool> &vis)
{vis[src]=true;
x++;
for(auto x1: mp[src])
{if(!vis[x1])
{dfs_helper(x1,vis);

}
}
}
ll dfs(int n)
{
map<int,bool>vis;
ll ans=0;
vector<int> v;
for(int i=0;i<n;i++)
vis[i]=false;
for(int i=0;i<n;i++)
{
    if(!vis[i])
    { x=0;
     dfs_helper(i,vis);
 v.push_back(x);
 x=0;
 }
}
//for(int i=0;i<v.size();i++)
//cout<<v[i]<<" ";
//cout<<endl;
if(v.size()==1)
return 0;
for(int i=0;i<v.size();i++)
{n-=v[i];
    //for(int j=i+1;j<v.size();j++)
    ans+=(v[i]*n);
}
return ans;
}
